/********************************************************************
 * Copyright 2023 highstreet technologies GmbH and others...
 * 
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not  this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

// converted file from https://forge.3gpp.org/rep/sa5/MnS/-/blob/Rel-18/xsd/measData.xsd
syntax = "proto3";

package measurements;

import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

message FileSender {
  string senderName = 1;
  string senderType = 2;
}

message FileHeaderMeasData {
  google.protobuf.Timestamp beginTime = 1;
}

message FileHeader {
  FileSender fileSender = 1;
  FileHeaderMeasData measData = 2;
  string fileFormatVersion = 3;
  string vendorName = 4;
  string dnPrefix = 5;
}

message MeasEntity {
  string userLabel = 1;
  string localDn = 2;
  string swVersion = 3;
} 

message Job {
  string jobId = 1;
}

message GranPeriod {
  google.protobuf.Duration duration = 1;
  google.protobuf.Timestamp endTime = 2;
}

message RepPeriod {
  google.protobuf.Duration duration = 1;
}

// message MeasTypes {
//   repeated string name = 1;
// }

message MeasType {
  uint32 p = 1;
  string name = 2;
}

message MeasResult {
  oneof result {
    int32 intValue = 1;
    float floatValue = 2;
    string stringValue = 3;
  }
}

message R {
  uint32 p = 1;
  MeasResult value= 2;
}
 
message MeasValue {
  string measObjLdn = 1;
  // repeated MeasResult measResults = 2; // Ether measResults
  repeated R r = 2;                       // or r (preferred)
  bool suspect = 3;
}

message MeasInfo {
  string measInfoId = 1;
  Job job = 2;
  GranPeriod granPeriod = 3;
  RepPeriod repPeriod = 4;
  // MeasTypes measTypes = 5;             // Ether measTypes
  repeated MeasType measType = 5;         // or measType (preferred)
  repeated MeasValue measValue = 6;
}

message MeasDataFileMeasData {
  MeasEntity measEntity = 1;
  repeated MeasInfo measInfo = 2; 
} 

message FileFooterMeasData {
  google.protobuf.Timestamp endTime = 1; 
}
 
message FileFooter {
  FileFooterMeasData measData = 1;
}

message MeasDataFile {
  FileHeader fileHeader = 1;
  repeated MeasDataFileMeasData measData = 2;
  FileFooter fileFooter = 3;
}
